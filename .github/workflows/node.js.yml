name: CI Pipeline

on:
  push: # Trigger on all pushes to any branch
    branches: 
      - '**' # Match all branches
  pull_request: # Trigger on all pull requests to any branch
    branches: 
      - '**' # Match all branches


jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - run: npm ci

      - name: Run Jest tests
        run: npm test

  detox-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Use Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: 18.x

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Android SDK & Emulator
        run: |
          sudo apt update
          sudo apt install -y openjdk-17-jdk wget unzip libgl1-mesa-dev
          mkdir -p $ANDROID_HOME/cmdline-tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O sdk-tools.zip
          unzip sdk-tools.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          rm sdk-tools.zip
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH
          sdkmanager --install "platform-tools" "platforms;android-31" "build-tools;31.0.0" "system-images;android-31;google_apis;x86_64" "emulator"
          sdkmanager --licenses
        
      - name: Create Android Emulator
        run: |
          echo "no" | avdmanager create avd --force -n TestEmulator -k "system-images;android-31;google_apis;x86_64" -d "pixel"
    
      - name: Start Android Emulator
        run: |
          nohup $ANDROID_HOME/emulator/emulator -avd TestEmulator -no-audio -no-window -gpu off -no-snapshot > /dev/null 2>&1 &
          adb wait-for-device

      - name: Install Dependencies
        run: npm install

      - name: Start Metro Bundler
        run: npx react-native start &

      - name: Build app for Detox
        run: npm run detox-build

      - name: Run Detox tests
        run: npm run detox-test

      - name: Upload Test Artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: detox-artifacts
          path: artifacts
