name: CI Pipeline

on:
  push: # Trigger on all pushes to any branch
    branches: 
      - '**' # Match all branches
  pull_request: # Trigger on all pull requests to any branch
    branches: 
      - '**' # Match all branches
env:
  ANDROID_ARCH: x86_64
  ANDROID_TARGET: google_apis_playstore
  API_LEVEL: 33
  ANDROID_BUILD_TOOLS_VERSION: 33.0.2
  ANDROID_SDK_PACKAGES: system-images;android-33;google_apis_playstore;x86_64 platforms;android-33 build-tools;33.0.2 platform-tools emulator
  EMULATOR_TIMEOUT: 350
  EMULATOR_NAME: nexus


jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - run: npm ci

      - name: Run Jest tests
        run: npm test

  detox-tests:
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 1

    - name: Add avdmanager and sdkmanager to system PATH
      run: |
        echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/${{ env.ANDROID_BUILD_TOOLS_VERSION }}" >> $GITHUB_PATH

    - name: Node
      uses: actions/setup-node@v3

    - name: Restore Java 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Install node_modules
      run: |
        npm install

    - name: Install Sdk
      run: |
        yes Y | sdkmanager --licenses
        Sdkmanager --install ${ANDROID_SDK_PACKAGES}

    - name: Build emulator
      run: |
        echo "no" | avdmanager --verbose create avd --force -n $EMULATOR_NAME --abi "${ANDROID_TARGET}/${ANDROID_ARCH}" -k "system-images;android-${API_LEVEL};${ANDROID_TARGET};${ANDROID_ARCH}"

    - name: Launch emulator
      run: |
        chmod +x ./start_emu_headless.sh
        EMULATOR_TIMEOUT=$EMULATOR_TIMEOUT EMULATOR_NAME=$EMULATOR_NAME ./start_emu_headless.sh
        
    - name: Build detox
      run: |
        npx detox build -c android.emu.debug

    - name: Android Run Detox
      run: |
        $ANDROID_SDK_ROOT/emulator/emulator -list-avds
        npx detox test --record-videos all --take-screenshots all -c android.emu.debug

    - name: Upload Test Artifact - GitHub Action
      if: always()
      uses: actions/upload-artifact@v4
      with: 
        name: artifacts
        path: artifacts
